| {% extends 'layout.html' %}

| {% block page_title %}{{node.name}}{% endblock%}

| {% block og %}
meta(property="og:title", content="{{node.name}}")
// XXX - Replace with actual url
meta(property="og:url", content="https://cloud.blender.org")
meta(property="og:type", content="website")
| {% endblock %}

| {% block head %}
link(href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css", rel="stylesheet")
| {% endblock %}

| {% block header_backdrop %}
.navbar-backdrop(style="background-image: url({{ node.properties.picture_header.thumbnail('l') }})")
.navbar-backdrop-overlay
| {% endblock %}

| {% block body %}

#project_container
	#project-header
		.project_nav-expand-btn(title="Toggle Navigation")
			i.ion-ios-arrow-right

		ul.breadcrumb

			li.project-organization
				// XXX - Link to project organization
				a(href="/bi") Blender Institute

			li.project-title
				// XXX - Link to project overview
				a(href="#") {{ node.name }}

			li
				a(href="#") Extras

			li
				a(href="#") Videos

		#project-loading
			i.ion-load-c

		ul.project-edit-tools
			a#item_add(href="#")
				li
					i.button-add.zmdi.zmdi-collection-plus
					| Add Asset
			a#item_edit(href="#")
				li
					i.button-edit.zmdi.zmdi-edit
					| Edit
			a#item_delete(href="#")
				li
					i.zmdi.zmdi-delete

	#project-flex

		#project_nav
			#project_tree

		#project_nav-footer
			.project_nav-collapse-btn(title="Toggle Navigation")
				i.ion-ios-arrow-left

		.project_split

		#project_context-container
			#project_context


| {% endblock %}

| {% block footer_navigation %}{% endblock %}
| {% block footer %}{% endblock %}

| {% block footer_scripts %}
script(type="text/javascript", src="//cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js")
script(type="text/javascript", src="//releases.flowplayer.org/6.0.3/flowplayer.min.js")
script(type="text/javascript", src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.3/handlebars.min.js")

script(type="text/javascript").
	$('#project_context-container').perfectScrollbar({suppressScrollX: true});

	// Binding for ajax event
	$(document).bind("ajaxSend", function(){
		$('#project-loading').fadeIn(100);
	}).bind("ajaxComplete", function(){
		$('#project-loading').fadeOut();
	});

	container_offset = $('#project-flex').offset();

	function containerResizeY(window_height){

		container_height = window_height - container_offset.top;

		if (container_height > parseInt($('#project-flex').css("min-height"))) {
			$('#project-flex, #project_nav, #project_context-container').css(
				{'max-height': container_height + 'px'}
			);
		};
	};

	$(window).on("load resize",function(){
		containerResizeY($(window).height());
	});

	function loadNodeContent(url, nodeId) {
		$.get(url, function(dataHtml) {
			// Update the DOM injecting the generate HTML into the page
			$('#project_context').html(dataHtml);
			// If a nodeId is specified, update the interface for editing and deletion
			if (typeof(nodeId) != 'undefined') {
				$('#item_edit').attr('data-node_id', nodeId);
				window.location.replace('#' + nodeId);
				$('#item_add').attr('data-parent_node_id', nodeId);
			};

		})
		.fail(function(dataResponse) {
			$('#project_context').html($('<iframe id="server_error"/>'));
			$('#server_error').attr('src', url);
		});
	}

	function displayStorage(storageNodeId, path) {
		var url = '/nodes/' + storageNodeId + '/view?embed=1&path=' + path;
		loadNodeContent(url);
	}

	function displayNode(nodeId) {
		// Remove the 'n_' suffix from the id
		if (nodeId.substring(0, 2) == 'n_') {
			nodeId = nodeId.substr(2);
		}
		//console.log(nodeId);
		var url = '/nodes/' + nodeId + '/view?embed=1'
		loadNodeContent(url, nodeId);
	}

	function editNode(nodeId) {
		// Remove the 'n_' suffix from the id
		if (nodeId.substring(0, 2) == 'n_') {
			nodeId = nodeId.substr(2);
		}
		//- console.log(nodeId);
		var url = '/nodes/' + nodeId + '/edit?embed=1'
		$.get(url, function(dataHtml) {
			// Update the DOM injecting the generate HTML into the page
			$('#project_context').html(dataHtml);
			window.location.replace('#' + nodeId);
		})
		.fail(function(dataResponse) {
			$('#project_context').html($('<iframe id="server_error"/>'));
			$('#server_error').attr('src', url);
		})
		.always(function(){
			$('.button-edit').addClass('zmdi zmdi-edit').removeClass('fa fa-spin fa-spinner');
		});
	}

	function addNode(parentId) {

		//- console.log(nodeId);
		var url = '/files/upload?embed=1'
		$.get(url, function(dataHtml) {
			// Update the DOM injecting the generate HTML into the page
			$('#project_context').html(dataHtml);
		})
		.fail(function(dataResponse) {
			$('#project_context').html($('<iframe id="server_error"/>'));
			$('#server_error').attr('src', url);
		})
		.always(function(){
			$('.button-add').addClass('zmdi zmdi-collection-plus').removeClass('fa fa-spin fa-spinner');
		});
	}

	function loadContent() {
		// If the loaded URL has an asset id hashed, arrange the view accordingly
		var nodeId = undefined;
		if (location.hash) {
			nodeId = location.hash.substring(1);
		} else {
			nodeId = '{{node._id}}';
		}

		displayNode(nodeId);

		$('#project_tree').jstree({
				'core': {
						'data': function (obj, callback) {
								if(obj.id === '#') { //tree root
										$.getJSON('/nodes/' + nodeId + '/view?format=jstree', function(jsonObject) {
												callback.call(this, jsonObject['items']);
										});

								} else { //normal node
										if (obj.original.type == 'group_storage') {
											nodeId = obj.original.storage_node;
											$.getJSON('/nodes/' + nodeId + '/view?format=jstree&children=1&path=' + obj.original.path, function(jsonObject) {
												callback.call(this, jsonObject.children);
											});
										} else {
											// Remove the 'n_' suffix from the id
											nodeId = obj.id.substring(2);
											$.getJSON('/nodes/' + nodeId + '/view?format=jstree&children=1', function(jsonObject) {
													callback.call(this, jsonObject.children);
													$('.waiting').text('averrr');
											});
										}
								}
						}
				},
				"types" : {
						"#": {"valid_children": ["collection"]},
						"chapter" : {"icon": "zmdi zmdi-folder-outline"},
						"group" : {"icon": "zmdi zmdi-folder-outline"},
						"group_storage" : {"icon": "zmdi zmdi-folder-outline"},
						"filesystem_node" : {"icon": "zmdi zmdi-folder-outline"},
						"file" : {"icon": "zmdi zmdi-file", "max_children": 0},
						"filesystem_file" : {"icon": "zmdi zmdi-file", "max_children": 0},
						"image" : {"icon": "zmdi zmdi-image-o", "max_children": 0},
						"video" : {"icon": "zmdi zmdi-movie", "max_children": 0},
						"default" : {"icon": "zmdi zmdi-file"}
				},
				"plugins": ["types",] //, "state", "sort"
		});

		var jstreeAPI = $('#project_tree').jstree(true);


		$('#project_tree').on("select_node.jstree", function (e, data) {
			if (typeof(data.node.original.path) === 'undefined') {
				displayNode(data.node.id);
			} else {
				displayStorage(data.node.original.storage_node, data.node.original.path);
			}
			jstreeAPI.toggle_node(data.node);
		});

		$('#item_edit').click(function(e){

			$('.button-edit').addClass('fa fa-spin fa-spinner').removeClass('zmdi zmdi-edit');

			// When clicking on the edit icon, embed the edit
			e.preventDefault;
			node_id = document.getElementById("item_edit");
			editNode(node_id.getAttribute('data-node_id'));
		});


		$('#item_add').click(function(e){

			$('.button-add').addClass('fa fa-spin fa-spinner').removeClass('zmdi zmdi-collection-plus');

			e.preventDefault;
			node_id = document.getElementById("item_add");
			addNode(node_id.getAttribute('data-parent_node_id'));
		});

	};

	// Initialize the page
	loadContent();

| {% endblock %}

| {% block comment_scripts %} {% endblock%}
